[comment encoding = UTF-8 /]
[module providerGenerator('http://www.ustok.org/extgen/model/epmodel')]
[import org::ustok::extgen::core::codegen::util/]

[comment ----- extensions provider class template ----- /]

[template public providerGenerator(model : EPModel)]

[comment @main /]
[file (toJavaClassPrefix(model).concat('Provider').concat('.java'), false, 'UTF-8')]
// CHECKSTYLE:OFF
package [model.basePackage/].[model.id/].provider;

import java.util.ArrayList;
import java.util.List;
import org.eclipse.core.runtime.CoreException;
import [model.basePackage/].[model.id/].*;

/**
 * Provider to access all contributions made by extensions to extension point "[id/]".
 *
 * @generated
 */
public class [toJavaClassPrefix(model)/]Provider {

	public [toJavaClassPrefix(model)/]Provider() {
	}

	private List<[rootElement.toJavaClassName()/]> resolveExtensions() throws CoreException {
		final [toJavaClassPrefix(model)/]ExtensionResolver resolver = new [toJavaClassPrefix(model)/]ExtensionResolver();
		return resolver.resolveExtensions();
	}

	//-------------------------------------------------------------------------------
	/*
	public List<Exporter> getExporters() throws CoreException {
		final List<Exporter> result = new ArrayList<>();
		resolveExtensions().forEach(ext -> result.addAll(ext.getExporters()));
		return result;
	}

	public List<String> getExporterNames() throws CoreException {
		final List<String> result = new ArrayList<>();
		getExporters().forEach(exp -> result.add(exp.getName()));
		return result;
	}

	public List<String> getExporterDescriptions() throws CoreException {
		final List<String> result = new ArrayList<>();
		getExporters().forEach(exp -> result.add(exp.getDescription()));
		return result;
	}

	private List<ExportersExtension> resolveExtensions() throws CoreException {
		final ExportersExtensionResolver resolver = new ExportersExtensionResolver();
		return resolver.resolveExtensions();
	}

	*/
	//-------------------------------------------------------------------------------

}
[/file]
[/template]
